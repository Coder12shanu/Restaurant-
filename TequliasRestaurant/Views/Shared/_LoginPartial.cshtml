@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link @(ViewContext.RouteData.Values["area"]?.ToString() == "Identity" && ViewContext.RouteData.Values["page"].ToString() == "/Account/Manage/Index" ? "active border-bottom" : "")" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link @(ViewContext.RouteData.Values["area"]?.ToString() == "Identity" && ViewContext.RouteData.Values["page"].ToString() == "/Account/Register" ? "active border-bottom" : "")" asp-area="Identity" style="color:black" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(ViewContext.RouteData.Values["area"]?.ToString() == "Identity" && ViewContext.RouteData.Values["page"].ToString() == "/Account/Login" ? "active border-bottom" : "")" asp-area="Identity" style="color:black" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
